name: Build Ares Plugin

on:
  push:
    branches: [ main, master, develop, dev-peru, feature/**, bugfix/** ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read   # mínimo necesario

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'   # cache integrado de setup-java (opcional pero útil)

      # Cache adicional para wrapper/caches (acción oficial de GitHub)
      - name: 🗂️ Cache Gradle directories
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🔍 Ensure Gradle Wrapper
        run: |
          echo "🔧 Ensuring Gradle Wrapper..."
          if [ ! -f "gradlew" ]; then
            echo "❌ gradlew not found. Please commit the Gradle wrapper to the repo."
            exit 1
          fi
          chmod +x gradlew
          # Garantiza el jar del wrapper (por si algún repo lo omite)
          if [ ! -f "gradle/wrapper/gradle-wrapper.jar" ]; then
            echo "📥 Downloading gradle-wrapper.jar..."
            mkdir -p gradle/wrapper
            curl -sSL -o gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/v8.10.0/gradle/wrapper/gradle-wrapper.jar
          fi

      - name: 📚 Check libs directory
        run: |
          echo "📁 Checking libs directory..."
          if [ -d "libs" ]; then
            echo "✅ libs exists. Listing up to 10 jars:"
            find libs -name "*.jar" | head -10 || true
            echo "Total JARs: $(find libs -name "*.jar" | wc -l)"
          else
            echo "⚠️ libs missing; creating empty structure so compilation won't break on path checks."
            mkdir -p libs/{abilities,clients,holograms,pearls,placeholders,ranks,spigots}
            touch libs/Vault.jar
            touch libs/ViaVersion.jar
            touch libs/ProtocolSupport.jar
            touch libs/holograms/HolographicDisplays.jar
            touch libs/clients/CheatBreakerAPI.jar
            touch libs/abilities/PandaAbilityAPI.jar
            touch libs/pearls/VortexPearlsAPI.jar
            touch libs/placeholders/PlaceholderAPI.jar
            touch libs/spigots/1.8.8.jar
            touch libs/spigots/1.16.jar
            touch libs/spigots/1.7.10.jar
            touch libs/spigots/1.17.jar
            for jar in AquaCoreAPI Zoot VolcanoAPI ZoomAPI MizuAPI AtomAPI CoreAPI zPermissions HestiaAPI pxAPI Alchemist Holiday Akuma Helium DeluxeTags; do
              touch "libs/ranks/${jar}.jar"
            done
          fi

      - name: 🔨 Build with Gradle
        env:
          GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs='-Xmx2g'"
        run: |
          echo "🚀 Building Ares plugin..."
          ./gradlew --version
          ./gradlew clean shadowJar --no-daemon --stacktrace

      - name: 📊 Build info
        run: |
          echo "📋 Build Information:"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          if [ -f "build.gradle.kts" ]; then
            echo "🏗️  Project group: $(grep '^group' build.gradle.kts | head -n1 | cut -d'"' -f2 || true)"
          fi
          echo "📅 Date: $(date +'%d.%m.%Y %H:%M:%S')"
          echo "🎯 Java: $(java -version 2>&1 | head -n1)"
          echo "⚙️  Gradle: $(./gradlew --version | grep '^Gradle ' | head -n1)"
          if [ -d "build/libs" ]; then
            echo "📦 Generated JARs:"
            ls -la build/libs/*.jar || echo "No JAR files found"
          fi

      - name: 🎯 Upload JAR Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: Ares-Plugin-${{ github.run_number }}
          path: build/libs/*-all.jar
          retention-days: 30

      - name: 📈 Upload build reports on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-reports-${{ github.run_number }}
          path: build/reports/
          retention-days: 7

      - name: ✅ Build Success Notification
        if: success()
        run: |
          echo "🎉 BUILD SUCCESSFUL!"
          echo "✅ JAR artifact uploaded."

      - name: ❌ Build Failure Notification
        if: failure()
        run: |
          echo "💥 BUILD FAILED!"
          echo "🔍 Check the 'build-reports' artifact and logs above."
